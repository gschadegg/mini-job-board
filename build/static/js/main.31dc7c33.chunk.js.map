{"version":3,"sources":["reducers/jobs.js","components/Header.js","reducers/filter.js","components/Filter.js","components/Tag.js","components/Job.js","components/JobList.js","hooks/hooks.js","components/TextInput.js","components/Select.js","components/CreateForm.js","components/Notification.js","App.js","store.js","index.js"],"names":["reducer","state","action","type","data","stateholder","sort","a","b","featured","new","Header","toggleForm","className","onClick","indexOf","filter","current","FilterTag","title","dispatch","useDispatch","handleClick","src","alt","Filter","filters","useSelector","filterTags","length","map","Tag","addFilter","Job","job","dayjs","extend","relativeTime","tags","displayDate","postedAt","fromNow","tagText","role","level","languages","tools","tag","idx","logo","company","height","width","position","contract","location","JobList","view","noScroll","jobs","filteredJobs","reduce","filtered","value","filterJobs","push","id","_id","useField","useState","setValue","onChange","event","target","checked","classList","remove","clear","TextInput","name","settings","toLowerCase","Select","options","option","CreateForm","selectedCompany","show","setNotification","companyOptions","clearCompany","clearJob","newJob","clearPosition","clearRole","clearLevel","clearContract","clearLocation","find","clearAllFields","document","querySelectorAll","forEach","el","closeForm","onSubmit","e","preventDefault","thisJob","isError","property","undefined","querySelector","add","Error","valdateForm","error","message","language","tool","Notification","App","formVisible","setFormVisible","notification","useEffect","axios","get","jobsList","body","toggle","toggleCreateForm","setTimeout","reducers","combineReducers","jobReducer","filterReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","renderApp","ReactDOM","render","StrictMode","getElementById","subscribe"],"mappings":"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","file":"static/js/main.31dc7c33.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nexport const initializeJobs = () => {\r\n    return async dispatch => {\r\n        const jobsList = await axios.get(\"https://mini-job-board.herokuapp.com/api/jobs\") //await axios.get(\"http://localhost:3001/api/jobs\")\r\n        dispatch({\r\n            type:'INITIALIZE',\r\n            data: jobsList.data\r\n        })\r\n    }\r\n}\r\n\r\n\r\n//create job without saving to DB\r\nexport const createJob = (job) => {\r\n    return async dispatch => {\r\n        // const newJob = await axios.post(\"https://mini-job-board.herokuapp.com/api/jobs\", job)\r\n        const newJob = job\r\n        dispatch({\r\n            type: 'CREATE',\r\n            data: newJob\r\n        })\r\n    }\r\n}\r\n\r\n\r\nconst reducer = (state = [], action) => {\r\n    switch(action.type){\r\n        case 'INITIALIZE':\r\n            state = action.data\r\n            return state\r\n        case 'CREATE':\r\n            let stateholder = [...state, action.data]\r\n            state = stateholder.sort((a, b) => {\r\n                if(a.featured || b.featured){\r\n                    return a.featured === b.featured ? 0 : a.featured? -1 : 1;\r\n                }\r\n                return a.new === b.new ? 0 : a.new? -1 : 1;\r\n            })\r\n            return state\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default reducer","import React from 'react'\r\n\r\nconst Header = ({toggleForm}) => {\r\n    \r\n    return(\r\n        <header>\r\n            <section className=\"flex justify-end content-center max-w-5xl mx-auto px-6 xl:px-0 h-24\">\r\n                <button className=\"self-center h-12 bg-cyanCustom-light bg-opacity-80 text-cyanCustom font-bold rounded-md px-4 py-1 hover:bg-opacity-100 transition-colors\" \r\n                    onClick={toggleForm}>Create Job Posting</button>\r\n            </section>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","\r\nexport const addFilter = ({title}) => {\r\n        return{\r\n            type:'ADD_FILTER',\r\n            data: title\r\n        }\r\n}\r\n\r\nexport const removeFilter = ({title}) => {\r\n        return{\r\n            type:'REMOVE_FILTER',\r\n            data: title\r\n        }\r\n}\r\n\r\nexport const clearAllFilters =() => {\r\n    return{\r\n        type:'CLEAR_ALL_FILTERS',\r\n        data:null\r\n    }\r\n}\r\n\r\nconst reducer = (state=[], action) =>{\r\n    switch(action.type){\r\n        case 'ADD_FILTER':\r\n            if(state.indexOf(action.data) !== -1){\r\n                return state\r\n            }\r\n            return [...state, action.data]\r\n\r\n        case 'REMOVE_FILTER':\r\n            state = state.filter(current => current !== action.data)\r\n            return state\r\n        \r\n        case 'CLEAR_ALL_FILTERS':\r\n            state = []\r\n            return state\r\n\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default reducer","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { removeFilter, clearAllFilters } from '../reducers/filter'\r\n\r\n\r\nconst FilterTag = ({title}) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const handleClick = (title) => {\r\n        dispatch(removeFilter(title))\r\n    }\r\n    \r\n    return(\r\n        <section className='tag-filter-container group' onClick={() => handleClick({title})}><div className='tag tag--active'>{title}</div> <span><img src='../images/icon-remove.svg' alt='remove filter'/></span></section>\r\n    )\r\n}\r\n\r\nconst Filter = () => {\r\n    const filters = useSelector(state => state.filter)\r\n    const dispatch = useDispatch()\r\n    let filterTags = 'Click on tags to filter positions'\r\n\r\n    if(filters.length > 0){\r\n        filterTags = filters.map(filter => <FilterTag title={filter} />) \r\n    }\r\n\r\n    const clearFilters = () => {\r\n        dispatch(clearAllFilters())\r\n    }\r\n\r\n    return(\r\n        <article className='filter-container'>\r\n              <section className='filter-list'>{filterTags}</section>\r\n              <button className='btn--clear' onClick={clearFilters}>Clear</button>\r\n        </article>      \r\n    )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { addFilter } from '../reducers/filter'\r\n\r\nconst Tag = ({ title }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const handleClick = (title) => {\r\n        dispatch(addFilter(title))\r\n    }\r\n\r\n    return(\r\n        <li onClick={() => handleClick({title})} className='tag'>{ title }</li>\r\n    )\r\n}\r\n\r\nexport default Tag","import React from 'react'\r\nimport Tag from './Tag'\r\nimport dayjs from 'dayjs'\r\nimport relativeTime from 'dayjs/plugin/relativeTime'\r\n\r\n\r\nconst Job = ({ job }) => {\r\n    dayjs.extend(relativeTime)\r\n    const displayDate = dayjs(job.postedAt).fromNow(true)\r\n\r\n    let tagText = [ job.role, job.level, ...job.languages, ...job.tools ]\r\n    \r\n    let tags\r\n    if(tagText.length > 0){\r\n        tags = tagText.map((tag, idx) => <Tag key={idx} title={tag} />)\r\n    }\r\n\r\n    return(\r\n        <article className={`job ${job.featured ? 'featured' : ''}`}>\r\n            <section className='job-details'>\r\n                <img src={`.${job.logo}`} alt={`${job.company} logo`} height='88' width='88' />\r\n                <section>\r\n                    <section className=\"job-details--top\">\r\n                     <div className=\"job-details--company\">{job.company}</div> {job.new ? <div className='badge badge--new'>NEW!</div> : null} {job.featured ? <div className='badge badge--featured'>FEATURED</div> : null}\r\n                    </section>\r\n                    {job.position}\r\n                    <section className=\"job-details--btm\">\r\n                        { `${displayDate} ago` } <span>&#8226;</span> {job.contract} <span>&#8226;</span> {job.location}\r\n                    </section>\r\n                    \r\n                </section>\r\n            </section>\r\n            <section className='tag-container'>\r\n                <ul className='tag-list'>\r\n                    { tags }\r\n                </ul>\r\n            </section>\r\n        </article>\r\n    )\r\n}\r\n\r\nexport default Job","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport Filter from './Filter'\r\nimport Job from './Job'\r\n\r\nconst JobList = ({noScroll}) => {\r\n    let jobs = useSelector(state => state.jobs)\r\n    let filters = useSelector(state => state.filter)\r\n    let filteredJobs = jobs\r\n    let view\r\n\r\n    const filterJobs = (tagText, filters) =>{\r\n        for( let value of filters ){\r\n            if(tagText.indexOf(value) === -1) {\r\n                return false\r\n            }\r\n        }\r\n        return true\r\n    }\r\n\r\n    if(jobs){\r\n        if(filters.length > 0){\r\n            filteredJobs = jobs.reduce((filtered, job) => {\r\n                let tagText = [ job.role, job.level, ...job.languages, ...job.tools ]\r\n                const filteredTags = filterJobs(tagText, filters)\r\n                \r\n                if(filteredTags){\r\n                    filtered.push(job)\r\n                }\r\n                return filtered\r\n            }, [])      \r\n        }\r\n        \r\n        view = filteredJobs.map((job, idx) => <Job id={job._id} job={job} key={job._id ? job._id : idx}/>)\r\n    }\r\n\r\n    return(\r\n        <main className={`jobs-list ${noScroll ? \"noScroll\" : ''}`}>\r\n            <Filter />\r\n            <article className='job-container'>\r\n                { view }\r\n            </article>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default JobList","import React, { useState } from 'react'\r\n// import axios from 'axios'\r\n\r\n\r\nexport const useField = (type) => {\r\n  const [value, setValue] = useState('')\r\n\r\n  const onChange = (event) => {\r\n      if(type === 'checkbox'){\r\n        setValue(event.target.checked)\r\n      } else {\r\n        setValue(event.target.value)\r\n        event.target.classList.remove('error')\r\n      }  \r\n  }\r\n\r\n  const clear = () => {\r\n        setValue('')\r\n  }\r\n\r\n  return {\r\n    type,\r\n    value,\r\n    onChange,\r\n    clear\r\n  }\r\n}","import React from 'react'\r\n\r\nconst TextInput = ({ name, settings}) => {\r\n    const inputClasses = ''\r\n    return (\r\n        <div className=\"text-input\">\r\n            <label>{ name }</label>\r\n            <input className={inputClasses} {...settings} name={ name.toLowerCase() } /> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TextInput\r\n","import React from 'react'\r\n\r\n\r\nconst Select = ({ name, settings, options}) => {\r\n    const selectClasses = ''\r\n\r\n    return(\r\n        <div className=\"select\">\r\n            <label>{name}</label>\r\n            <select name={name.toLowerCase()} {...settings} className={selectClasses}>    \r\n                <option>--select one--</option>\r\n                {options.map((option, idx) => <option key={idx} value={option}>{option}</option>)}\r\n            </select>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Select","import React, { useState } from 'react'\r\nimport { useField } from '../hooks/hooks'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { createJob } from '../reducers/jobs'\r\nimport TextInput from './TextInput'\r\nimport Select from './Select'\r\n\r\nconst CreateForm = ({show, toggleForm, setNotification}) => {\r\n    const dispatch = useDispatch()\r\n    const jobs = useSelector(state => state.jobs)\r\n    \r\n\r\n\r\n    //setting up form options\r\n    let companyOptions = []\r\n    const roleOptions = [\"Frontend\", \"Backend\", \"Fullstack\"]\r\n    const levelOptions = [\"Junior\", \"Midweight\", \"Senior\"]\r\n    const locationOptions = [\"WorldWide\", \"USA Only\", \"UK Only\", \"Remote\"]\r\n    const contractOptions = [\"Part Time\", \"Full Time\", \"Contract\" ]\r\n    const languageOptions = [\"HTML\", \"CSS\", \"JavaScript\", \"Python\"]\r\n    const toolOptions = [\"SASS\", \"React\", \"Vue\", \"Django\", \"Ruby\"]\r\n    \r\n\r\n    //using hook to create form el states & onChange events\r\n    const {clear: clearCompany, ...company} = useField('select')\r\n    const { clear: clearJob, ...newJob} = useField('checkbox')\r\n    const { clear: clearFeatured, ...featured} = useField('checkbox')\r\n    const { clear: clearPosition, ...position} = useField('text')\r\n    const { clear: clearRole, ...role} = useField('select')\r\n    const { clear: clearLevel, ...level} = useField('select')\r\n    const { clear: clearContract, ...contract} = useField('select')\r\n    const { clear: clearLocation, ...location} = useField('select')\r\n\r\n    let logo \r\n    let selectedCompany\r\n\r\n    //use selected company to assign logo\r\n    if(company.value && jobs){\r\n        selectedCompany = jobs.find(job => job.company === company.value)\r\n        if(selectedCompany){\r\n            logo = selectedCompany.logo\r\n        }\r\n    }\r\n\r\n    \r\n    //creating list of existing companys in system\r\n    if(jobs){\r\n        companyOptions = jobs.map(job => {\r\n            if(companyOptions.indexOf(job.company) === -1){\r\n                return job.company\r\n            }\r\n            return false\r\n        }) \r\n    }\r\n\r\n    //validate\r\n    const valdateForm = (job) => {\r\n        let isError\r\n        for(let property in job){\r\n            if(job[property].length < 1 || job[property] === undefined){\r\n                document.querySelector(`[name=${property}`).classList.add('error')\r\n                isError = true\r\n            } \r\n        }\r\n        if(isError){\r\n            throw Error(\"Please fill out all highlighted fields\")\r\n        }  \r\n        return\r\n    }\r\n    \r\n    //clear all form elements\r\n    const clearAllFields = () => {\r\n        \r\n        document.querySelectorAll('input[type=checkbox]:checked').forEach( el => {\r\n            el.checked  = false\r\n        })\r\n        document.querySelectorAll(\".error\").forEach( el => {\r\n            el.classList.remove(\"error\")\r\n        })\r\n\r\n        logo = null\r\n        selectedCompany = null\r\n\r\n        clearCompany()\r\n        clearJob()\r\n        clearPosition()\r\n        clearRole()\r\n        clearLevel()\r\n        clearContract()\r\n        clearLocation()\r\n\r\n    }\r\n\r\n    const closeForm = () => {\r\n        clearAllFields()\r\n        toggleForm()\r\n    }\r\n\r\n    //handle submiting new position data \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        let tools= []\r\n        document.querySelectorAll('.tool-checkboxes input[type=checkbox]:checked').forEach(el => {\r\n            tools.push(el.value)\r\n        })\r\n        let languages= []\r\n        document.querySelectorAll('.language-checkboxes input[type=checkbox]:checked').forEach( el => {\r\n            languages.push(el.value)\r\n        })\r\n        \r\n        let thisJob = {\"company\": company.value,\r\n                        \"position\": position.value, \r\n                        \"role\":role.value, \r\n                        \"level\":level.value, \r\n                        \"contract\":contract.value, \r\n                        \"location\":location.value}\r\n\r\n        try{\r\n            valdateForm(thisJob)\r\n            thisJob = {\r\n                ...thisJob,\r\n                logo,\r\n                languages, tools, \r\n                \"featured\": featured.value, \r\n                'new': newJob.value\r\n            }\r\n\r\n            dispatch(createJob(thisJob))\r\n            clearAllFields()\r\n            toggleForm()\r\n            setNotification(['success', 'Your Job Posting has been created!'])\r\n        }catch(error){  \r\n            setNotification(['error', error.message])\r\n        }  \r\n    }\r\n\r\n    return(\r\n        <form onSubmit={handleSubmit} className={`create-form ${show ? \"show\" : ''}`}>\r\n            <section className=\"flex justify-between\">\r\n                <h2>Create Job Posting</h2>\r\n                <div className=\"btn--close--x\" onClick={closeForm}>X</div>\r\n            </section>\r\n            <section className='flex flex-wrap mt-8'>\r\n                <Select name='Company' settings={ company } options={companyOptions}/>\r\n                {logo ? <img src={logo} className='self-center mr-8' alt=\"company logo\" width='60px' height='60px'/> : null }\r\n            \r\n                <div className='checkbox-single'>\r\n                    <label>Featured</label>\r\n                    <input name='featured' type=\"checkbox\" {...featured} value='featured' />\r\n                </div>\r\n                <div className='checkbox-single'>\r\n                    <label>New</label>\r\n                    <input name='new' type=\"checkbox\" {...newJob} value='new' />\r\n                </div>\r\n \r\n                <TextInput name=\"Position\" settings={position} /> \r\n    \r\n                <Select name='Role' settings={ role } options={roleOptions}/>\r\n                <Select name='Level' settings={ level } options={levelOptions}/>\r\n                <Select name='Location' settings={ location } options={locationOptions}/>\r\n                <Select name='Contract' settings={ contract } options={contractOptions}/>\r\n\r\n                <div className=\"checkbox-group\">\r\n                    <label>Languages</label>\r\n                    <div className=\"language-checkboxes checkbox-grouping\">\r\n                        {languageOptions.map((language, idx) => <div key={language}><input type=\"checkbox\" name={language} value={language} /><label name={language}>{language}</label> </div>)}\r\n                    </div>\r\n                </div>\r\n                <div className=\"checkbox-group\">\r\n                    <label>Tools</label>\r\n                    <div className=\"tool-checkboxes checkbox-grouping\">\r\n                        {toolOptions.map(tool => <div key={tool}><input type=\"checkbox\" name={tool} value={tool} /><label name={tool}>{tool}</label> </div>)}\r\n                    </div>\r\n                </div>\r\n                   \r\n                <section className=\"flex mt-12\">\r\n                     <button>Create</button> \r\n                     <div className='btn--close' onClick={closeForm}>Cancel</div> \r\n                </section>\r\n\r\n            </section>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default CreateForm","import React from 'react'\r\n\r\nconst Notification = ({ type, message}) => {\r\n    return(\r\n        <div className={`notification ${type}`}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React, { useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { initializeJobs } from './reducers/jobs'\n\nimport Header from './components/Header'\nimport JobList from './components/JobList'\nimport CreateForm from './components/CreateForm'\nimport Notification from './components/Notification'\n\n\nfunction App() {\n  const dispatch = useDispatch()\n  const [ formVisible, setFormVisible ] = useState(false)\n  const [ notification, setNotification ] = useState(null)\n\n\n  useEffect(() => {\n    dispatch(initializeJobs())\n  }, [dispatch])\n\n  useEffect(() => {\n    document.body.classList.toggle('noScroll', formVisible);\n  },[formVisible])\n  \n    const toggleCreateForm = () => {\n        setFormVisible(!formVisible)\n    }\n\n    if(notification){\n      setTimeout(() => {\n        setNotification(null)\n      }, 5000)\n    }\n    \n\n  return (\n    <div className=\"App\">\n      { notification ? <Notification message={notification[1]} type={notification[0]} /> : null}\n      <Header toggleForm={toggleCreateForm}/>\n      <JobList noScroll={formVisible}/>\n      <CreateForm show={formVisible} setNotification={setNotification} toggleForm={toggleCreateForm}/>\n    </div>\n  );\n}\n\nexport default App;\n","import { createStore, applyMiddleware, combineReducers } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\nimport jobReducer from './reducers/jobs'\r\nimport filterReducer from './reducers/filter'\r\n\r\nconst reducers = combineReducers({\r\n    jobs: jobReducer,\r\n    filter: filterReducer\r\n})\r\n\r\nconst store = createStore(\r\n                reducers, \r\n                composeWithDevTools(\r\n                    applyMiddleware(thunk)\r\n                ))\r\n\r\n\r\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './index.css'\n\nconst renderApp = () => {\n  ReactDOM.render(\n      <Provider store={store}>\n        <React.StrictMode>\n          <App />\n        </React.StrictMode>\n      </Provider>,\n      document.getElementById('root'))\n}\n\nrenderApp()\nstore.subscribe(renderApp)"],"sourceRoot":""}