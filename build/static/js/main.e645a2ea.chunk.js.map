{"version":3,"sources":["reducers/jobs.js","components/Header.js","reducers/filter.js","components/Filter.js","components/Tag.js","components/Job.js","components/JobList.js","App.js","store.js","index.js"],"names":["reducer","state","action","type","data","Header","indexOf","filter","current","FilterTag","title","dispatch","useDispatch","className","onClick","handleClick","src","alt","Filter","filters","useSelector","filterTags","length","map","Tag","addFilter","Job","job","dayjs","extend","relativeTime","tags","displayDate","postedAt","fromNow","tagText","role","level","languages","tools","tag","featured","logo","company","height","width","new","position","contract","location","JobList","view","jobs","filteredJobs","reduce","filtered","value","filterJobs","push","id","_id","App","useEffect","a","axios","get","jobsList","reducers","combineReducers","jobReducer","filterReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","renderApp","ReactDOM","render","StrictMode","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.e645a2ea.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nexport const initializeJobs = () => {\r\n    return async dispatch => {\r\n        const jobsList = await axios.get(\"http://localhost:3001/api/jobs\")\r\n        dispatch({\r\n            type:'INITIALIZE',\r\n            data: jobsList.data\r\n        })\r\n    }\r\n}\r\n\r\n\r\nconst reducer = (state = [], action) => {\r\n    switch(action.type){\r\n        case 'INITIALIZE':\r\n            state = action.data\r\n            return state\r\n\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default reducer","import React from 'react'\r\n// import Filter from './Filter'\r\n\r\nconst Header = () => {\r\n    return(\r\n        <header>\r\n            {/* <Filter /> */}\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","\r\nexport const addFilter = ({title}) => {\r\n        return{\r\n            type:'ADD_FILTER',\r\n            data: title\r\n        }\r\n}\r\n\r\nexport const removeFilter = ({title}) => {\r\n        return{\r\n            type:'REMOVE_FILTER',\r\n            data: title\r\n        }\r\n}\r\n\r\nexport const clearAllFilters =() => {\r\n    return{\r\n        type:'CLEAR_ALL_FILTERS',\r\n        data:null\r\n    }\r\n}\r\n\r\nconst reducer = (state=[], action) =>{\r\n    switch(action.type){\r\n        case 'ADD_FILTER':\r\n            if(state.indexOf(action.data) !== -1){\r\n                return state\r\n            }\r\n            return [...state, action.data]\r\n\r\n        case 'REMOVE_FILTER':\r\n            state = state.filter(current => current !== action.data)\r\n            return state\r\n        \r\n        case 'CLEAR_ALL_FILTERS':\r\n            state = []\r\n            return state\r\n\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default reducer","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { removeFilter, clearAllFilters } from '../reducers/filter'\r\n\r\n\r\nconst FilterTag = ({title}) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const handleClick = (title) => {\r\n        dispatch(removeFilter(title))\r\n    }\r\n    \r\n    return(\r\n        <section className='tag-filter-container group' onClick={() => handleClick({title})}><div className='tag tag--active'>{title}</div> <span><img src='../images/icon-remove.svg' alt='remove filter'/></span></section>\r\n    )\r\n}\r\n\r\nconst Filter = () => {\r\n    const filters = useSelector(state => state.filter)\r\n    const dispatch = useDispatch()\r\n    let filterTags = 'Click on tags to filter positions'\r\n\r\n    if(filters.length > 0){\r\n        filterTags = filters.map(filter => <FilterTag title={filter} />) \r\n    }\r\n\r\n    const clearFilters = () => {\r\n        dispatch(clearAllFilters())\r\n    }\r\n\r\n    return(\r\n        <article className='filter-container'>\r\n              <section className='filter-list'>{filterTags}</section>\r\n              <button className='btn--clear' onClick={clearFilters}>Clear</button>\r\n        </article>      \r\n    )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { addFilter } from '../reducers/filter'\r\n\r\nconst Tag = ({ title }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const handleClick = (title) => {\r\n        dispatch(addFilter(title))\r\n    }\r\n\r\n    return(\r\n        <li onClick={() => handleClick({title})} className='tag'>{ title }</li>\r\n    )\r\n}\r\n\r\nexport default Tag","import React from 'react'\r\nimport Tag from './Tag'\r\nimport dayjs from 'dayjs'\r\nimport relativeTime from 'dayjs/plugin/relativeTime'\r\n\r\nconst Job = ({ job }) => {\r\n    dayjs.extend(relativeTime)\r\n    const displayDate = dayjs(job.postedAt).fromNow(true)\r\n\r\n    let tagText = [ job.role, job.level, ...job.languages, ...job.tools ]\r\n    \r\n    let tags\r\n    if(tagText.length > 0){\r\n        tags = tagText.map(tag => <Tag title={tag} />)\r\n    }\r\n\r\n    return(\r\n        <article className={`job ${job.featured ? 'featured' : null}`}>\r\n            <section className='job-details'>\r\n                <img src={`.${job.logo}`} alt={`${job.company} logo`} height='88' width='88' />\r\n                <section>\r\n                    <section className=\"job-details--top\">\r\n                     <div className=\"job-details--company\">{job.company}</div> {job.new ? <div className='badge badge--new'>NEW!</div> : null} {job.featured ? <div className='badge badge--featured'>FEATURED</div> : null}\r\n                    </section>\r\n                    {job.position}\r\n                    <section className=\"job-details--btm\">\r\n                        { `${displayDate} ago` } <span>&#8226;</span> {job.contract} <span>&#8226;</span> {job.location}\r\n                    </section>\r\n                    \r\n                </section>\r\n            </section>\r\n            <section className='tag-container'>\r\n                <ul className='tag-list'>\r\n                    { tags }\r\n                </ul>\r\n            </section>\r\n        </article>\r\n    )\r\n}\r\n\r\nexport default Job","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport Filter from './Filter'\r\nimport Job from './Job'\r\n\r\nconst JobList = () => {\r\n    let jobs = useSelector(state => state.jobs)\r\n    let filters = useSelector(state => state.filter)\r\n    let filteredJobs = jobs\r\n    let view\r\n\r\n    const filterJobs = (tagText, filters) =>{\r\n        for( let value of filters ){\r\n            if(tagText.indexOf(value) === -1) {\r\n                return false\r\n            }\r\n        }\r\n        return true\r\n    }\r\n\r\n    if(jobs){\r\n        if(filters.length > 0){\r\n            filteredJobs = jobs.reduce((filtered, job) => {\r\n                let tagText = [ job.role, job.level, ...job.languages, ...job.tools ]\r\n                const filteredTags = filterJobs(tagText, filters)\r\n                \r\n                if(filteredTags){\r\n                    filtered.push(job)\r\n                }\r\n                return filtered\r\n            }, [])      \r\n        }\r\n        \r\n        view = filteredJobs.map(job => <Job id={job._id} job={job} key={job._id}/>)\r\n    }\r\n\r\n    return(\r\n        <main className='jobs-list'>\r\n            <Filter />\r\n            <article className='job-container'>\r\n                { view }\r\n            </article>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default JobList","import React, { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { initializeJobs } from './reducers/jobs'\n\nimport Header from './components/Header'\nimport JobList from './components/JobList'\n\n\nfunction App() {\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(initializeJobs())\n  }, [dispatch])\n\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <JobList />\n    </div>\n  );\n}\n\nexport default App;\n","import { createStore, applyMiddleware, combineReducers } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\nimport jobReducer from './reducers/jobs'\r\nimport filterReducer from './reducers/filter'\r\n\r\nconst reducers = combineReducers({\r\n    jobs: jobReducer,\r\n    filter: filterReducer\r\n})\r\n\r\nconst store = createStore(\r\n                reducers, \r\n                composeWithDevTools(\r\n                    applyMiddleware(thunk)\r\n                ))\r\n\r\n\r\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './index.css'\n\nconst renderApp = () => {\n  ReactDOM.render(\n      <Provider store={store}>\n        <React.StrictMode>\n          <App />\n        </React.StrictMode>\n      </Provider>,\n      document.getElementById('root'))\n}\n\nrenderApp()\nstore.subscribe(renderApp)"],"sourceRoot":""}